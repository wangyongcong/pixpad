<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <None Include="README" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\install\include\OpenEXR\half.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\halfExport.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\halfFunction.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\halfLimits.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\Iex.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IexBaseExc.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IexErrnoExc.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IexExport.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IexForward.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IexMacros.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IexMathExc.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IexMathFloatExc.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IexMathFpu.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IexMathIeeeExc.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IexNamespace.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IexThrowErrnoExc.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IlmBaseConfig.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IlmThread.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IlmThreadExport.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IlmThreadForward.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IlmThreadMutex.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IlmThreadNamespace.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IlmThreadPool.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\IlmThreadSemaphore.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathBox.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathBoxAlgo.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathColor.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathColorAlgo.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathEuler.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathExc.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathExport.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathForward.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathFrame.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathFrustum.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathFrustumTest.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathFun.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathGL.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathGLU.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathHalfLimits.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathInt64.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathInterval.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathLimits.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathLine.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathLineAlgo.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathMath.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathMatrix.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathMatrixAlgo.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathNamespace.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathPlane.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathPlatform.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathQuat.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathRandom.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathRoots.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathShear.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathSphere.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathVec.h" />
    <ClInclude Include="..\..\install\include\OpenEXR\ImathVecAlgo.h" />
    <ClInclude Include="..\..\sparrow\common\any_stride_iterator.h" />
    <ClInclude Include="..\..\sparrow\common\image.h" />
    <ClInclude Include="..\..\sparrow\common\log.h" />
    <ClInclude Include="..\..\sparrow\common\logger.h" />
    <ClInclude Include="..\..\sparrow\common\unitest.h" />
    <ClInclude Include="..\..\sparrow\common\util.h" />
    <ClInclude Include="..\..\sparrow\renderer\clipping.h" />
    <ClInclude Include="..\..\sparrow\renderer\index_buffer.h" />
    <ClInclude Include="..\..\sparrow\renderer\material.h" />
    <ClInclude Include="..\..\sparrow\renderer\mesh.h" />
    <ClInclude Include="..\..\sparrow\renderer\renderer.h" />
    <ClInclude Include="..\..\sparrow\renderer\render_command.h" />
    <ClInclude Include="..\..\sparrow\renderer\render_target.h" />
    <ClInclude Include="..\..\sparrow\renderer\spw_command.h" />
    <ClInclude Include="..\..\sparrow\renderer\spw_pipeline.h" />
    <ClInclude Include="..\..\sparrow\renderer\spw_rasterizer.h" />
    <ClInclude Include="..\..\sparrow\renderer\spw_renderer.h" />
    <ClInclude Include="..\..\sparrow\renderer\spw_render_target.h" />
    <ClInclude Include="..\..\sparrow\renderer\spw_texture.h" />
    <ClInclude Include="..\..\sparrow\renderer\surface.h" />
    <ClInclude Include="..\..\sparrow\renderer\vertex_buffer.h" />
    <ClInclude Include="..\..\sparrow\renderer\vertex_layout.h" />
    <ClInclude Include="..\..\sparrow\scene\camera.h" />
    <ClInclude Include="..\..\sparrow\scene\scene.h" />
    <ClInclude Include="..\..\sparrow\scene\scene_obj.h" />
    <ClInclude Include="..\..\sparrow\shader\flat_color.h" />
    <ClInclude Include="..\..\sparrow\shader\phone_color.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\sparrow\common\image.cpp" />
    <ClCompile Include="..\..\sparrow\common\logger.cpp" />
    <ClCompile Include="..\..\sparrow\common\util.cpp" />
    <ClCompile Include="..\..\sparrow\renderer\clipping.cpp" />
    <ClCompile Include="..\..\sparrow\renderer\index_buffer.cpp" />
    <ClCompile Include="..\..\sparrow\renderer\material.cpp" />
    <ClCompile Include="..\..\sparrow\renderer\mesh.cpp" />
    <ClCompile Include="..\..\sparrow\renderer\renderer.cpp" />
    <ClCompile Include="..\..\sparrow\renderer\render_command.cpp" />
    <ClCompile Include="..\..\sparrow\renderer\spw_command.cpp" />
    <ClCompile Include="..\..\sparrow\renderer\spw_pipeline.cpp" />
    <ClCompile Include="..\..\sparrow\renderer\spw_renderer.cpp" />
    <ClCompile Include="..\..\sparrow\renderer\spw_render_target.cpp" />
    <ClCompile Include="..\..\sparrow\renderer\spw_texture.cpp" />
    <ClCompile Include="..\..\sparrow\renderer\surface.cpp" />
    <ClCompile Include="..\..\sparrow\renderer\vertex_buffer.cpp" />
    <ClCompile Include="..\..\sparrow\renderer\vertex_layout.cpp" />
    <ClCompile Include="..\..\sparrow\scene\camera.cpp" />
    <ClCompile Include="..\..\sparrow\scene\load_collada.cpp" />
    <ClCompile Include="..\..\sparrow\scene\scene.cpp" />
    <ClCompile Include="..\..\sparrow\scene\scene_obj.cpp" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{09481871-B2D2-44FD-B806-89061A1DAEA6}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>libspw_static</RootNamespace>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
    <ProjectName>libspw_static</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <IncludePath>..\..\install\include;..\..\install\zlib\include;..\..\install\libpng\include;..\..\install\include\opencollada\COLLADABaseUtils;..\..\install\include\opencollada\COLLADAFramework;..\..\install\include\opencollada\COLLADASaxFrameworkLoader;..\..\install\include\opencollada\COLLADAStreamWriter;..\..\install\include\opencollada\GeneratedSaxParser;$(IncludePath)</IncludePath>
    <LibraryPath>..\..\install\lib;..\..\install\zlib\lib;..\..\install\libpng\lib;..\..\install\libspw\lib;..\..\install\lib\opencollada</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <IncludePath>..\..\install\include;..\..\install\zlib\include;..\..\install\libpng\include;..\..\install\include\opencollada\COLLADABaseUtils;..\..\install\include\opencollada\COLLADAFramework;..\..\install\include\opencollada\COLLADASaxFrameworkLoader;..\..\install\include\opencollada\COLLADAStreamWriter;..\..\install\include\opencollada\GeneratedSaxParser;$(IncludePath)</IncludePath>
    <LibraryPath>..\..\install\lib;..\..\install\zlib\lib;..\..\install\libpng\lib;..\..\install\libspw\lib;..\..\install\lib\opencollada</LibraryPath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>..\..\sparrow\common;..\..\sparrow\mathex;..\..\sparrow\renderer;..\..\sparrow\scene;..\..\sparrow\shader;..\..\sparrow\thread;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4819</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
    </Link>
    <PostBuildEvent>
      <Command>set TARGET_FILE=$(TargetFileName)
set INSTALL_DIR=$(InstallPath)libspw\lib
if $(Configuration)==Debug (set TARGET_FILE=$(TargetName)d$(TargetExt))
if $(Configuration)==Release (set TARGET_FILE=$(TargetName)$(TargetExt))
if not exist %INSTALL_DIR% (mkdir %INSTALL_DIR%)
set TARGET_PATH=%INSTALL_DIR%\%TARGET_FILE%
if not exist %TARGET_PATH% (goto CPY) else (goto CMP_AND_CPY)
:CPY
copy /Y $(TargetPath) %TARGET_PATH%
goto END
:CMP_AND_CPY
xcopy /Y /D $(TargetPath) %TARGET_PATH%
:END</Command>
    </PostBuildEvent>
    <Lib />
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>..\..\sparrow\common;..\..\sparrow\mathex;..\..\sparrow\renderer;..\..\sparrow\scene;..\..\sparrow\shader;..\..\sparrow\thread;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4819</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PostBuildEvent>
      <Command>set TARGET_FILE=$(TargetFileName)
set INSTALL_DIR=$(InstallPath)libspw\lib
if $(Configuration)==Debug (set TARGET_FILE=$(TargetName)d$(TargetExt))
if $(Configuration)==Release (set TARGET_FILE=$(TargetName)$(TargetExt))
if not exist %INSTALL_DIR% (mkdir %INSTALL_DIR%)
set TARGET_PATH=%INSTALL_DIR%\%TARGET_FILE%
if not exist %TARGET_PATH% (goto CPY) else (goto CMP_AND_CPY)
:CPY
copy /Y $(TargetPath) %TARGET_PATH%
goto END
:CMP_AND_CPY
xcopy /Y /D $(TargetPath) %TARGET_PATH%
:END</Command>
    </PostBuildEvent>
    <Lib />
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>